// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum userRole {
  ADMIN
  VENDOR
}

model User {
  id           String     @id @unique
  email        String     @unique
  vendorName   String
  password     String  
  role         userRole   @default(VENDOR)  
  phoneNumber  String
  vendorId     String     @unique
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  plan         Plan?      @relation(fields: [planId], references: [id])
  planId       String?    // Foreign key to Plan model
}

model Plan {
  id           String     @id @unique @default(uuid())
  name         String     @unique
  features     String     // JSON or text field for plan features
  price        Decimal
  createdAt    DateTime   @default(now())
  users        User[]     // Relation back to User
  services     PlanService[] @relation("PlanToPlanService") // Opposite relation field
}

model Service {
  id           String     @id @unique @default(uuid())
  name         String
  description  String
  plans        PlanService[] @relation("ServiceToPlanService") // Opposite relation field
  createdAt    DateTime   @default(now())
}

model PlanService {
  id           String     @id @unique @default(uuid())
  plan         Plan       @relation(fields: [planId], references: [id], name: "PlanToPlanService")
  planId       String     // Foreign key to Plan
  service      Service    @relation(fields: [serviceId], references: [id], name: "ServiceToPlanService")
  serviceId    String     // Foreign key to Service
  createdAt    DateTime   @default(now())
}
